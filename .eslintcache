[{"C:\\Users\\rareb\\coding-challenge\\src\\index.js":"1","C:\\Users\\rareb\\coding-challenge\\src\\Pages\\SiteList.js":"2","C:\\Users\\rareb\\coding-challenge\\src\\Pages\\SiteDetails.js":"3","C:\\Users\\rareb\\coding-challenge\\src\\App.js":"4","C:\\Users\\rareb\\coding-challenge\\src\\theme.js":"5"},{"size":398,"mtime":1607202570880,"results":"6","hashOfConfig":"7"},{"size":9407,"mtime":1607182528926,"results":"8","hashOfConfig":"7"},{"size":12796,"mtime":1607205625604,"results":"9","hashOfConfig":"7"},{"size":2748,"mtime":1607183442548,"results":"10","hashOfConfig":"7"},{"size":478,"mtime":1607182528949,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"673ig",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rareb\\coding-challenge\\src\\index.js",[],["24","25"],"C:\\Users\\rareb\\coding-challenge\\src\\Pages\\SiteList.js",["26"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: \"hidden\",\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        marginTop: \"30px\",\r\n        alignItems: \"flex-start\",\r\n        wrap: \"nowrap\",\r\n    },\r\n    image: {\r\n        width: 50,\r\n        height: 128,\r\n    },\r\n    img: {\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"100%\",\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    },\r\n    appBarSecondary: {\r\n        display: \"flex\",\r\n        backgroundColor: \"blue\",\r\n        color: \"white\",\r\n        justifyContent: \"center\",\r\n        paddingRight: \"70px\",\r\n        borderTop: \"1px solid black\",\r\n        borderRadius: 0,\r\n    },\r\n    secondaryAppBarText: {\r\n        justifyContent: \"center\",\r\n    },\r\n    siteAvatar: {\r\n        height: \"60px\",\r\n        width: \"60px\",\r\n        background: \"cover\",\r\n    },\r\n    red: {\r\n        backgroundColor: \"red\",\r\n    },\r\n    cardContainer: {\r\n        flexWrap: \"no-wrap\",\r\n    },\r\n    forward: {\r\n        marginTop: \"40px\",\r\n    },\r\n    appBarTertiary: {\r\n        backgroundColor: \"white\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        borderRadius: 0,\r\n        height: \"2px\",\r\n        padding: 0,\r\n        paddingLeft: \"20px\",\r\n    },\r\n    addressText: {\r\n        overflow: \"hidden\",\r\n        noWrap: true,\r\n    },\r\n    mainContainer: {\r\n        width: \"calc(95% + 11px)\",\r\n    },\r\n}));\r\n\r\nfunction SiteList() {\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        fetchSites();\r\n    }, []);\r\n\r\n    const [sites, setSites] = useState([]);\r\n\r\n    const fetchSites = async () => {\r\n        const data = await fetch(\"http://localhost:4000/sites\");\r\n        const sites = await data.json();\r\n        setSites(sites);\r\n        console.log(sites);\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <Toolbar className={classes.appBarSecondary}>\r\n                <Typography\r\n                    className={classes.secondaryAppBarText}\r\n                    variant=\"h6\"\r\n                >\r\n                    Sites\r\n                </Typography>\r\n            </Toolbar>\r\n            <Toolbar className={classes.appBarTertiary}>\r\n                <Typography variant=\"subtitle1\">All Sites</Typography>\r\n                <IconButton align=\"right\">\r\n                    <SearchIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n            <Paper className={classes.appBarTertiary}></Paper>\r\n            {sites.map((site) => (\r\n                <Link\r\n                    className={classes.link}\r\n                    to={`/sites/${site.id}`}\r\n                    key={site.id}\r\n                >\r\n                    <Paper className={classes.paper}>\r\n                        <Grid container spacing={2} wrap=\"nowrap\">\r\n                            <Grid item>\r\n                                <div className={classes.image}>\r\n                                    <Avatar\r\n                                        alt=\"Track\"\r\n                                        className={classes.siteAvatar}\r\n                                        src={\r\n                                            site && site.images ? (\r\n                                                site.images[0]\r\n                                            ) : (\r\n                                                <div>TT</div>\r\n                                            )\r\n                                        }\r\n                                    ></Avatar>\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm\r\n                                container\r\n                                wrap=\"nowrap\"\r\n                                zeroMinWidth\r\n                            >\r\n                                <Grid\r\n                                    wrap=\"nowrap\"\r\n                                    className={classes.mainContainer}\r\n                                    item\r\n                                    sm\r\n                                    container\r\n                                    direction=\"column\"\r\n                                    spacing={2}\r\n                                >\r\n                                    <Grid item sm wrap=\"nowrap\">\r\n                                        <Typography\r\n                                            gutterBottom\r\n                                            variant=\"subtitle1\"\r\n                                        >\r\n                                            {site && site.title ? (\r\n                                                <span>{site.title}</span>\r\n                                            ) : (\r\n                                                <span>Site Name</span>\r\n                                            )}\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            gutterBottom\r\n                                        >\r\n                                            <Typography\r\n                                                overflow=\"hidden\"\r\n                                                textOverflow=\"elipsis\"\r\n                                                className={classes.addressText}\r\n                                            >\r\n                                                {site && site.address ? (\r\n                                                    <Typography\r\n                                                        noWrap\r\n                                                        className={\r\n                                                            classes.addressText\r\n                                                        }\r\n                                                    >\r\n                                                        {site.address.street}\r\n                                                        &nbsp;\r\n                                                        {site.address.city}\r\n                                                        &nbsp;\r\n                                                        {site.address.state}\r\n                                                        &nbsp;\r\n                                                        {site.address.zipCode}\r\n                                                    </Typography>\r\n                                                ) : (\r\n                                                    <span>Site Address</span>\r\n                                                )}\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\">\r\n                                            {site && site.contacts ? (\r\n                                                <span>\r\n                                                    {\r\n                                                        site.contacts.main\r\n                                                            .firstName\r\n                                                    }\r\n                                                    &nbsp;\r\n                                                    {\r\n                                                        site.contacts.main\r\n                                                            .lastName\r\n                                                    }\r\n                                                </span>\r\n                                            ) : (\r\n                                                <span>Contact Name</span>\r\n                                            )}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item wrap=\"nowrap\">\r\n                                        <Typography\r\n                                            variant=\"body2\"\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                        ></Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                                <ArrowForwardIosIcon\r\n                                    className={classes.forward}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SiteList;\r\n","C:\\Users\\rareb\\coding-challenge\\src\\Pages\\SiteDetails.js",["27","28","29","30","31"],"C:\\Users\\rareb\\coding-challenge\\src\\App.js",[],"C:\\Users\\rareb\\coding-challenge\\src\\theme.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":7,"column":8,"nodeType":"38","messageId":"39","endLine":7,"endColumn":18},{"ruleId":"36","severity":1,"message":"40","line":3,"column":27,"nodeType":"38","messageId":"39","endLine":3,"endColumn":33},{"ruleId":"36","severity":1,"message":"41","line":3,"column":35,"nodeType":"38","messageId":"39","endLine":3,"endColumn":41},{"ruleId":"36","severity":1,"message":"42","line":3,"column":43,"nodeType":"38","messageId":"39","endLine":3,"endColumn":48},{"ruleId":"36","severity":1,"message":"37","line":8,"column":8,"nodeType":"38","messageId":"39","endLine":8,"endColumn":18},{"ruleId":"43","severity":1,"message":"44","line":87,"column":8,"nodeType":"45","endLine":87,"endColumn":10,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'ButtonBase' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSite'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [fetchSite]",{"range":"52","text":"53"},[2371,2373],"[fetchSite]"]